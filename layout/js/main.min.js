window.addEventListener('load', function () {
  // embed JSON to DOM
  contactJSON();
  testimonials_slider_JSON();
  technologies_slider_JSON();
  projects_slider_JSON();

  // loader
  $('.loader').addClass('hide');
  $('.wrapper').addClass('show');
  $('body').removeClass('active');
});

// animation
ScrollReveal({
  distance: '100px',
  duration: 500,
});
ScrollReveal().reveal('.navbar-up > *, .footer *', {
  delay: 150,
  distance: '0px',
  opacity: 0,
});
ScrollReveal().reveal('.about h1, .contact h1', {
  delay: 50,
  origin: 'bottom',
});
ScrollReveal().reveal('.projects *', {
  delay: 100,
  origin: 'bottom',
  interval: 50,
});
ScrollReveal().reveal('.services .left h1', {
  delay: 100,
  origin: 'bottom',
});
ScrollReveal().reveal('.services .left p', {
  delay: 150,
  origin: 'bottom',
});
ScrollReveal().reveal('.services  .right', {
  delay: 250,
  origin: 'right',
  opacity: 0,
});

ScrollReveal().reveal('.home .left > *, .about .left > *, .contact .left > *', {
  delay: 100,
  origin: 'left',
  interval: 25,
});
ScrollReveal().reveal(
  '.home .right > *, .about .right > *, .contact .right > form',
  {
    delay: 150,
    origin: 'right',
    interval: 50,
  },
);
// service grow
$('.services').on('click', '.service', function (e) {
  $('.left').addClass('shrink');
  $('.right').addClass('grow');
  $('.service').removeClass('grow');
  $(e.target).addClass('grow');
});
$('.services').on('click', '.service.grow', function (e) {
  $('.service').removeClass('grow');
  $('.left').removeClass('shrink');
  $('.right').removeClass('grow');
  $('.right').addClass('ungrow');
});

// JSON Fetch to contacts list
function contactJSON() {
  $.getJSON('contact.json', function (contact) {
    for (c = 0; c < contact.length; c++) {
      $('.contacts').append(
        `<a href="${contact[c].link}" target="_blank"><img src="img/icons/${contact[c].img}.svg"/></a>`,
      );
    }
  });
}

// JSON fetch to testimonials slider
function testimonials_slider_JSON() {
  $.getJSON('testimonials.json', function (testi) {
    for (t = 0; t < testi.length; t++) {
      $('.testimonials').append(
        `<div class="testimonial">
          <div class="profile"> 
            <div class="image"> 
              <img src="img/clients/${
                testi[t].avatar.length != 0 ? testi[t].avatar : 'avatar.svg'
              }" alt="">
            </div>
            <div class="text"> 
              <h2>${testi[t].clientName}</h2>
              <span>${testi[t].clientAddress}</span>
            </div>
          </div>
          <div class="testi">
            <h3>${testi[t].projectTitle}</h3>
            <q ${
              testi[t].projectFeedback.length != 0
                ? ''
                : 'style = "display: none;"'
            }">
              ${testi[t].projectFeedback}
            </q>
            <img src="img/icons/five_stars.webp">
          </div>
        </div>`,
      );
    }
  })
    .done(function () {
      $('.testimonials').slick({
        arrows: true,
        dots: false,
        autoplay: true,
        autoplaySpeed: 3000,
        slidesToShow: 1,
        prevArrow: `
        <button class="slick-prev slick-arrow">
          <svg width="37" height="49" viewBox="0 0 37 49" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g filter="url(#filter0_d_1220_5)">
              <path d="M30.875 38.2499L8.125 20.4999L30.875 2.74988" stroke="white" stroke-width="4" stroke-linecap="round"/>
            </g>
            <defs>
              <filter id="filter0_d_1220_5" x="0.873535" y="0.749756" width="36.0015" height="47.5002" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
                <feOffset dy="4"/>
                <feGaussianBlur stdDeviation="2"/>
                <feComposite in2="hardAlpha" operator="out"/>
                <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
                <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1220_5"/>
                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1220_5" result="shape"/>
              </filter>
            </defs>
          </svg>
        </button>
        `,
        nextArrow: `
        <button class="slick-next slick-arrow">
          <svg width="37" height="49" viewBox="0 0 37 49" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g filter="url(#filter0_d_1220_16)">
              <path d="M6.125 2.75L28.875 20.5L6.125 38.25" stroke="white" stroke-width="4" stroke-linecap="round"/>
            </g>
            <defs>
              <filter id="filter0_d_1220_16" x="0.125" y="0.749878" width="36.0015" height="47.5002" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
                <feOffset dy="4"/>
                <feGaussianBlur stdDeviation="2"/>
                <feComposite in2="hardAlpha" operator="out"/>
                <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
                <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1220_16"/>
                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1220_16" result="shape"/>
              </filter>
            </defs>
          </svg>
        
        </button>
        `,
      });
    })
    .done(function () {
      var saveArray = [];
      var longTesti = 110;
      document
        .querySelectorAll('.testimonial .testi q')
        .forEach(function (q, i) {
          var save = q.textContent.trim();
          saveArray.push(save);
          if (saveArray[i].length > longTesti) {
            $(q).html(
              saveArray[i].slice(0, longTesti) +
                '...<span class="show"> See more</span>',
            );
          }
          $(q.childNodes[1]).click(function (e) {
            if ($(this).hasClass('show')) {
              q.childNodes[0].textContent = saveArray[i];
              $(this).text(' less');
              $(this).removeClass('show');
              $(this).addClass('hide');
            } else {
              q.childNodes[0].textContent =
                saveArray[i].slice(0, longTesti) + '...';
              $(this).text(' See more');
              $(this).removeClass('hide');
              $(this).addClass('show');
            }
          });
        });
    });
}

// JSON fetch to technologies slider
function technologies_slider_JSON() {
  $.getJSON('web_technology.json', function (tech) {
    for (w = 0; w < tech.length; w++) {
      $('.technologies_slider').append(
        `<div class="technology">
          <img src="img/tech/${tech[w].icon}.svg"/>
          <span>${tech[w].name}</span> 
        </div>`,
      );
    }
  }).done(function () {
    $('.technologies_slider').slick({
      arrows: false,
      dots: false,
      slidesToShow: 3,
      slidesToScroll: 3,
      rows: 3,
      slidesPerRow: 1,
      dots: true,
      autoplay: true,
      autoplaySpeed: 3000,
    });
  });
}

// JSON fetch to projects slider
function projects_slider_JSON() {
  $.getJSON('projects.json', function (project) {
    for (p = 0; p < project.length; p++) {
      $('.projects_slider').append(
        `<div  id="project-pop-up" class="proj_slider"  data-index="${p}">
          <div style="--bg: url('../../img/projects/${project[p].bg}.webp')">
            <h3>${project[p].title}</h3>
          </div>
        </div>`,
      );
    }
  }).done(function () {
    $('.projects_slider').slick({
      arrows: true,
      dots: false,
      slidesToShow: 3,
      slidesToScroll: 3,
      speed: 600,
      centerMode: true,
      focusOnSelect: true,
      draggable: false,
      rows: 2,
      slidesPerRow: 1,
      autoplay: true,
      autoplaySpeed: 5000,
      prevArrow: `
      <button class="slick-prev slick-arrow">
        <svg width="37" height="49" viewBox="0 0 37 49" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g filter="url(#filter0_d_1220_5)">
            <path d="M30.875 38.2499L8.125 20.4999L30.875 2.74988" stroke="white" stroke-width="4" stroke-linecap="round"/>
          </g>
          <defs>
            <filter id="filter0_d_1220_5" x="0.873535" y="0.749756" width="36.0015" height="47.5002" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
              <feFlood flood-opacity="0" result="BackgroundImageFix"/>
              <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
              <feOffset dy="4"/>
              <feGaussianBlur stdDeviation="2"/>
              <feComposite in2="hardAlpha" operator="out"/>
              <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
              <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1220_5"/>
              <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1220_5" result="shape"/>
            </filter>
          </defs>
        </svg>
      </button>
      `,
      nextArrow: `
      <button class="slick-next slick-arrow">
        <svg width="37" height="49" viewBox="0 0 37 49" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g filter="url(#filter0_d_1220_16)">
            <path d="M6.125 2.75L28.875 20.5L6.125 38.25" stroke="white" stroke-width="4" stroke-linecap="round"/>
          </g>
          <defs>
            <filter id="filter0_d_1220_16" x="0.125" y="0.749878" width="36.0015" height="47.5002" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
              <feFlood flood-opacity="0" result="BackgroundImageFix"/>
              <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
              <feOffset dy="4"/>
              <feGaussianBlur stdDeviation="2"/>
              <feComposite in2="hardAlpha" operator="out"/>
              <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
              <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1220_16"/>
              <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1220_16" result="shape"/>
            </filter>
          </defs>
        </svg>
      
      </button>
      `,
      responsive: [
        {
          breakpoint: 992,
          settings: {
            vertical: true,
            slidesToShow: 2,
            slidesToScroll: 1,
          },
        },
      ],
    });
  });
}

// open projects popup
$('.projects_slider').on('click', '#project-pop-up', (e) => {
  e.preventDefault();
  $(document.body).addClass('active');
  $('.projects-pop-up').addClass('show');
});

// close projects popup
$('.projects-pop-up .close').on('click', (e) => {
  e.preventDefault();
  $(document.body).removeClass('active');
  $('.projects-pop-up').removeClass('show');
});

// JSON fetch to projects popup
$('.projects_slider').on('click', '#project-pop-up', function (e) {
  e.preventDefault();
  $.getJSON('projects.json', function (project) {
    let p = $(e.target).data('index');
    $('.projects-pop-up').attr(
      'style',
      `--bg-pop: url('../../img/projects/${project[p].bg}.webp')`,
    );
    // define and append text inside Json file
    $('.projects-pop-up .image').html(
      `<img src="img/projects/${project[p].image}.webp"/>`,
    );
    $('.projects-pop-up .title').html(project[p].title);
    $('.projects-pop-up .description').html(project[p].desc);
    $('.projects-pop-up .link').html(
      `<a target="_blank" href="${project[p].link}">Visit website</a>`,
    );
    // define and append array inside Json file
    $('.projects-pop-up .skills').empty();
    jQuery.each(project[p].skills, function (s, val) {
      $('.projects-pop-up .skills').append('<li>' + val + '</li>');
    });
  });
});

// open navbar for mobile
$('.navbar-up .open-menu').bind('click', () => {
  $('.navbar-up .nav-parent').addClass('active');
  $(document.body).addClass('active');
});
$('.navbar-up .close-menu').bind('click', () => {
  $('.navbar-up .nav-parent').removeClass('active');
  $(document.body).removeClass('active');
});

// resize nav when scroll
window.addEventListener('scroll', function () {
  if (window.scrollY > 0) {
    $('.navbar-up').addClass('resize');
    $('.navbar-up .btn').addClass('btn-blue');
  } else {
    $('.navbar-up').removeClass('resize');
    $('.navbar-up .btn').removeClass('btn-blue');
  }
});

// submit form
if (document.forms['ar_form']) {
  let nameError = true;
  let emailError = true;
  let messageError = true;

  const form = document.forms['ar_form'];
  form.addEventListener('submit', function (e) {
    e.preventDefault();
    validateName();
    validateEmail();
    validateMessage();
    if (nameError == true && emailError == true && messageError == true) {
      const data = new FormData(form);
      const action = e.target.action;
      fetch(action, {
        method: 'POST',
        body: data,
      })
        .then((response) => {
          $('.contact #ar_form').addClass('hide');
          $('.contact .success').addClass('show');
          $('#name').val('');
          $('#email').val('');
          $('#message').val('');
          $('#ar_form .input-field').removeClass('invalid');
          $('#ar_form .input-field').removeClass('not-empty');
        })
        .catch((error) => console.error('Error!', error.message));
    } else {
      return false;
    }
  });

  $('.contact .success .show_form').on('click', (e) => {
    e.preventDefault();
    $('.contact #ar_form').removeClass('hide');
    $('.contact .success').removeClass('show');
  });

  // validate inputs
  $('#ar_form .form-input').blur(function (e) {
    if (e.target.id == 'name') {
      validateName();
    }
    if (e.target.id == 'email') {
      validateEmail();
    }
    if (e.target.id == 'message') {
      validateMessage();
    }
    if ($(this).val().length !== 0) {
      $(this).parents('.input-field').addClass('not-empty');
    }
    if ($(this).val().length == 0) {
      $(this).parents('.input-field').removeClass('not-empty');
    }
  });
  function validateName() {
    let nameValue = $('#name').val();
    if (nameValue.length == '') {
      $('#name').parents('.input-field').addClass('invalid');
      nameError = false;
      return false;
    } else {
      $('#name').parents('.input-field').removeClass('invalid');
      nameError = true;
    }
  }
  function validateEmail() {
    let regex = /^([_\-\.0-9a-zA-Z]+)@([_\-\.0-9a-zA-Z]+)\.([a-zA-Z]){2,7}$/;
    let s = $('#email').val();
    if (!regex.test(s)) {
      $('#email').parents('.input-field').addClass('invalid');
      emailError = false;
      return false;
    } else {
      $('#email').parents('.input-field').removeClass('invalid');
      emailError = true;
    }
  }
  function validateMessage() {
    let messageValue = $('#message').val();
    if (messageValue.length == '') {
      $('#message').parents('.input-field').addClass('invalid');
      messageError = false;
      return false;
    } else {
      $('#message').parents('.input-field').removeClass('invalid');
      messageError = true;
    }
  }
}

// widnow click
window.addEventListener('click', (e) => {
  if (e.target.classList.contains('page-content')) {
    document.body.classList.remove('active');
    document.querySelector('.projects-pop-up').classList.remove('show');
  }
});

// add  projects number
$.getJSON('projects.json', function (data) {
  if (data.length > 0) {
    $('.navbar-up #projects').append('<span>' + data.length + '</span>');
  }
});
